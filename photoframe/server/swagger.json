
{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "e-commerce applicaiton API",
    "description": "e-commerce applciaiton API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:7070",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Products",
      "description": "API for products in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/products": {
      "post": {
        "tags": [
          "products"
        ],
        "description": "Create new product id in system",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product that we want to create",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New product id is created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all Products in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Products"
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "name": "productId",
          "in": "path",
          "required": true,
          "description": "product id that we want to find",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product with given ID",
        "responses": {
          "200": {
            "description": "Product is found",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete product with given ID",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Product is deleted",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "required": [
        "name",
        "_id",
        "is_available",
        "available_cnt"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "is_available": {
          "type": "boolean"
        },
        "available_cnt": {
          "type": "integer"
        }
      }
    },
    "Products": {
      "type": "array",
      "$ref": "#/definitions/Product"
    }
  }
}

